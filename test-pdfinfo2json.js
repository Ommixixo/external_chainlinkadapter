const axios = require('axios');

// Funci√≥n para probar el endpoint /fira-documentos/pdfinfo2json
async function testPdfInfo2Json() {
  try {
    console.log('üß™ Probando endpoint /fira-documentos/pdfinfo2json...\n');
    
    // Datos de prueba
    const testData = {
      temporada: "Primavera-Verano 2024", // Ajusta seg√∫n las temporadas disponibles
      crop_type: "ma√≠z", // o "Ma√≠z", "trigo", etc.
      state: "Jalisco" // opcional
    };
    
    console.log('üì§ Enviando datos:', JSON.stringify(testData, null, 2));
    console.log('\n‚è≥ Procesando PDF... (esto puede tomar unos segundos)\n');
    
    // Hacer la petici√≥n POST al endpoint
    const response = await axios.post('http://localhost:3000/api/fira-documentos/pdfinfo2json', testData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 60000 // 60 segundos de timeout para procesar PDF
    });
    
    console.log('‚úÖ Respuesta exitosa!');
    console.log('üìä Datos estructurados extra√≠dos:');
    console.log(JSON.stringify(response.data, null, 2));
    
  } catch (error) {
    console.error('‚ùå Error en la prueba:');
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Error:', error.response.data);
    } else if (error.request) {
      console.error('No se recibi√≥ respuesta del servidor');
      console.error('Aseg√∫rate de que el servidor est√© ejecut√°ndose en http://localhost:3000');
    } else {
      console.error('Error:', error.message);
    }
  }
}

// Funci√≥n para probar con diferentes cultivos
async function testMultipleCrops() {
  const cultivos = ['ma√≠z', 'trigo', 'sorgo'];
  
  for (const cultivo of cultivos) {
    console.log(`\nüåæ Probando con cultivo: ${cultivo}`);
    console.log('='.repeat(50));
    
    try {
      const testData = {
        temporada: "Primavera-Verano 2024",
        crop_type: cultivo
      };
      
      const response = await axios.post('http://localhost:3000/api/fira-documentos/pdfinfo2json', testData, {
        headers: { 'Content-Type': 'application/json' },
        timeout: 60000
      });
      
      console.log(`‚úÖ ${cultivo}: Documento encontrado`);
      console.log(`üìÑ Archivo: ${response.data.documento_seleccionado}`);
      console.log(`üîó URL: ${response.data.url_original}`);
      console.log(`üìä P√°ginas: ${response.data.datos_estructurados.metadata.numPages}`);
      
      // Mostrar metadatos extra√≠dos
      const metadata = response.data.datos_estructurados.metadata;
      if (metadata.cultivo) console.log(`üå± Cultivo: ${metadata.cultivo}`);
      if (metadata.zona) console.log(`üìç Zona: ${metadata.zona}`);
      if (metadata.ciclo) console.log(`üîÑ Ciclo: ${metadata.ciclo}`);
      if (metadata.estado) console.log(`üó∫Ô∏è Estado: ${metadata.estado}`);
      
    } catch (error) {
      console.log(`‚ùå ${cultivo}: ${error.response?.data?.error || error.message}`);
    }
  }
}

// Ejecutar las pruebas
if (require.main === module) {
  console.log('üöÄ Iniciando pruebas del endpoint /fira-documentos/pdfinfo2json\n');
  
  // Primera prueba con un cultivo espec√≠fico
  testPdfInfo2Json()
    .then(() => {
      console.log('\n' + '='.repeat(60));
      console.log('üîÑ Iniciando pruebas con m√∫ltiples cultivos...\n');
      return testMultipleCrops();
    })
    .then(() => {
      console.log('\n‚úÖ Todas las pruebas completadas');
    })
    .catch(error => {
      console.error('\n‚ùå Error en las pruebas:', error.message);
    });
}

module.exports = { testPdfInfo2Json, testMultipleCrops };
